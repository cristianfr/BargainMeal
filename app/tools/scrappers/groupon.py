#Scraper for groupon site
#If run individually, requires to be run as a module from app
from bs4 import BeautifulSoup as BS
from urllib import urlopen
from ..utils.text import formatting

#Groupon's website is generated by javascript.Not easy to GET
URL = ""
ITEM_LOCAL = "test_item_gp.html"
LOCAL = "tools/scrappers/gpdeals_sf.html"
HOST = "http://www.groupon.com"

def dealExtractorURL(url):
	return dealExtractor(urlopen(url))

def dealExtractor(location):
	soup = BS(location)
	deals = soup.findAll(attrs={"class":"deal-permalink"})
	extracted = []
	for deal in deals:
		name = formatting( deal.find( attrs={"class":"merchant-name"} ) )
		title = formatting( deal.find(attrs={"class":"deal-title"} ) )
		(orig,disc) = deal.findAll("span")
		value = formatting( orig ).lstrip('$')
		discount = formatting( disc ).lstrip('$')
		url = HOST + deal['href'].encode('utf-8')
		extracted.append( (name,title,value,discount,url,'groupon'))
	return extracted

def dealStrip(url):
	soup = BS(urlopen(url))
	try:
		relevantInfo = soup.find("li", attrs={"class":"clearfix"})
		phone = relevantInfo.find("span",attrs={"itemprop":"telephone"}).text.strip()
	except AttributeError:
		relevantInfo = soup.find("li", attrs={"class":"clearfix last"})
		phone = relevantInfo.find("span",attrs={"itemprop":"telephone"}).text.strip()
	phone = phone.replace('(','').replace(')','').replace(' ','').replace('-','').encode('utf-8')
	lat = relevantInfo['data-lat'].encode('utf-8')
	lng = relevantInfo['data-lng'].encode('utf-8')
	rating = soup.find("div",attrs={"class":"large star_rating"}).text.strip()
	rating = rating[0:rating.find('o')].strip()
	return (lat,lng,phone,rating)

def main():
	deals = dealExtractor(open(LOCAL,'r'))
	for deal in deals:
		print deal

if __name__=='__main__':
	main()